{"version":3,"sources":["Config/index.js","pages/Orders/index.js"],"names":["API_URL","process","Orders","useState","orders","setOrders","useEffect","fetch","then","response","json","data","id","push","className","map","order","status","style","marginBottom","gutterBottom","variant","component","color","direction","spacing","label","marginTop","date","hour","icon","total"],"mappings":"4HAAA,kCAAO,IAAMA,EAAUC,6D,yNCOR,SAASC,IAEtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAiBA,OAfAC,qBAAW,WACTC,MAAMP,IAAU,gBACfQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAC,GACL,IAAIE,EAAO,GAEX,IAAK,IAAIC,KAAMH,EACbA,EAASG,GAAIA,GAAKA,EAClBD,EAAKE,KAAKJ,EAASG,IAGrBP,EAAUM,QAEb,IAGC,0BAASG,UAAU,cAAnB,UACE,sBAAKA,UAAU,QAAf,6BAEE,cAAC,IAAD,OAGDV,EAAOW,KAAI,SAAAC,GACV,IAAIC,EAAS,UAab,MAXqB,eAAjBD,EAAMC,SACRA,EAAS,WAGU,cAAjBD,EAAMC,SACRA,EAAS,SAGU,aAAjBD,EAAMC,SACRA,EAAS,WAGT,cAAC,IAAD,CAAMC,MAAO,CAACC,aAAc,IAA5B,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAMC,MAAM,eAA5D,SACA,cAAC,IAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,SACE,cAAC,IAAD,CAAMF,MAAON,EAAQS,MAEnB,eAAC,IAAD,CAAYR,MAAO,CAACS,UAAW,GAAIR,aAAc,IAAKC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAMC,MAAM,aAAtG,UACGP,EAAMY,KADT,MACkBZ,EAAMa,QAGtBC,KAAM,cAAC,IAAD,UAKZ,cAAC,IAAD,IAEA,cAAC,IAAD,CAAYT,QAAQ,QAAQE,MAAM,aAAlC,SACA,sDAAyBP,EAAMe,MAA/B","file":"static/js/9.4b8f1a1e.chunk.js","sourcesContent":["export const API_URL = process.env.REACT_APP_API_URL;\n","import * as React from 'react';\nimport {useState, useEffect} from \"react\";\nimport { Divider, Typography, CardMedia, CardContent, Card, Chip, Stack } from '@mui/material';\nimport {API_URL} from \"../../Config/\";\nimport { CardActionArea } from '@mui/material';\nimport \"./styles.scss\"\nimport {CalendarToday} from \"@mui/icons-material\"\nexport default function Orders () {\n\n  const [orders, setOrders] = useState([]);\n\n  useEffect( () => {\n    fetch(API_URL + '/orders.json')\n    .then(response => response.json())\n    .then (response => {\n      let data = [];\n\n      for (let id in response) {\n        response[id].id = id\n        data.push(response[id])\n      }\n\n      setOrders(data)\n    })\n}, [])\n\n  return(\n    <section className=\"page-orders\">\n      <div className=\"title\">\n        - Seus Pedidos -\n        <Divider/>\n      </div>\n\n      {orders.map(order => {\n        let status = 'warning';\n\n        if (order.status === \"Finalizado\") {\n          status = \"success\"\n        }\n\n        if (order.status === \"Cancelado\"){\n          status = \"error\"\n        }\n\n        if (order.status === \"Pendente\"){\n          status = \"warning\"\n        }\n        return (\n          <Card style={{marginBottom: 20}}>\n            <CardActionArea>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"div\" color=\"text.primary\">\n                <Stack direction=\"row\" spacing={3}>\n                  <Chip color={status} label={\n\n                    <Typography style={{marginTop: 10, marginBottom: 10}} gutterBottom variant=\"h6\" component=\"div\" color=\"text.white\">\n                      {order.date} - {order.hour}\n                    </Typography>}\n\n                      icon={<CalendarToday/>}\n                  />\n                </Stack>\n                </Typography>\n\n                <Divider/>\n\n                <Typography variant=\"body1\" color=\"text.black\">\n                <strong>Valor Total: R$ {order.total} </strong>\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        )\n      })}\n    </section>\n  );\n}\n"],"sourceRoot":""}